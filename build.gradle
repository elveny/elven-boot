buildscript {
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configure(subprojects) { project ->
    apply from: file("${rootProject.rootDir}/gradle/shared.gradle")

    repositories {
        mavenCentral()
    }

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    group = 'tech.elven'
    version '1.0-SNAPSHOT'

    configurations {
        all*.exclude group: 'commons-logging', module: 'commons-logging'
        all*.exclude group: 'log4j', module: 'log4j'
    }

    eclipse.classpath {
        containers.remove 'org.eclipse.jdt.launching.JRE_CONTAINER'
        containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-${javaVersion}"
    }
}

configure(subprojects) {subproject ->
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'

    bootRepackage.enabled = false

    dependencies {
        compile("org.springframework.boot:spring-boot-starter")
        compile("org.springframework.boot:spring-boot-starter-web"){
            exclude module: "spring-boot-starter-tomcat"
        }
        compile("org.springframework.boot:spring-boot-starter-undertow")
        compile("org.springframework.boot:spring-boot-starter-actuator")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("junit:junit:${junitVersion}")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}